# Generated by Django 4.2.20 on 2025-10-25 18:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import markdownx.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog', '0011_auto_20251025_2205'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='blog',
            options={'ordering': ('-created_at',), 'verbose_name': 'Blog Post', 'verbose_name_plural': 'Blog Posts'},
        ),
        migrations.AlterModelOptions(
            name='bookmark',
            options={'ordering': ['-created_at'], 'verbose_name': 'Bookmark', 'verbose_name_plural': 'Bookmarks'},
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ['sort_order', 'title'], 'verbose_name': 'Category', 'verbose_name_plural': 'Categories'},
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={'ordering': ['-created_at'], 'verbose_name': 'Comment', 'verbose_name_plural': 'Comments'},
        ),
        migrations.AlterModelOptions(
            name='like',
            options={'ordering': ['-created_at'], 'verbose_name': 'Like', 'verbose_name_plural': 'Likes'},
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'ordering': ['-usage_count', 'name'], 'verbose_name': 'Tag', 'verbose_name_plural': 'Tags'},
        ),
        migrations.AddField(
            model_name='blog',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_blogs', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By'),
        ),
        migrations.AddField(
            model_name='blog',
            name='published_at',
            field=models.DateTimeField(blank=True, help_text='When this post was published', null=True, verbose_name='Published At'),
        ),
        migrations.AddField(
            model_name='blog',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', help_text='Publication status of the blog post', max_length=20, verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='notes',
            field=models.TextField(blank=True, help_text='Personal notes about this bookmark', verbose_name='Notes'),
        ),
        migrations.AddField(
            model_name='category',
            name='description',
            field=models.TextField(blank=True, help_text='Brief description of this category', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Optional parent category for hierarchical organization', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blog.category', verbose_name='Parent Category'),
        ),
        migrations.AddField(
            model_name='category',
            name='sort_order',
            field=models.PositiveIntegerField(default=0, help_text='Order in which categories appear (lower numbers first)', verbose_name='Sort Order'),
        ),
        migrations.AddField(
            model_name='comment',
            name='edited',
            field=models.BooleanField(default=False, help_text='Whether this comment has been edited', verbose_name='Edited'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='For threaded comments', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment', verbose_name='Parent Comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('spam', 'Spam')], default='approved', help_text='Moderation status of the comment', max_length=20, verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='comment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated At'),
        ),
        migrations.AddField(
            model_name='tag',
            name='color',
            field=models.CharField(default='#6c757d', help_text='Hex color code for tag display', max_length=7, verbose_name='Color'),
        ),
        migrations.AddField(
            model_name='tag',
            name='description',
            field=models.TextField(blank=True, help_text='Brief description of this tag', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='tag',
            name='usage_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this tag has been used', verbose_name='Usage Count'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='author',
            field=models.ForeignKey(blank=True, help_text='The author of this blog post', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(help_text='Select the most appropriate category', on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to='blog.category', verbose_name='Category'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='description',
            field=markdownx.models.MarkdownxField(help_text='Write your blog post content using Markdown', verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='excerpt',
            field=models.TextField(blank=True, help_text='Brief summary for previews (auto-generated if empty)', max_length=500, verbose_name='Excerpt'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='featured',
            field=models.BooleanField(default=False, help_text='Mark as featured to highlight on homepage', verbose_name='Featured Post'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='img',
            field=models.ImageField(blank=True, help_text='Upload a high-quality image for better engagement', null=True, upload_to='uploads/%Y/%m/%d', verbose_name='Featured Image'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this content is visible to users', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Soft delete flag', verbose_name='Is Deleted'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='meta_description',
            field=models.CharField(blank=True, help_text='Brief description for search engines (max 160 characters)', max_length=160, verbose_name='Meta Description'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='meta_keywords',
            field=models.CharField(blank=True, help_text='Comma-separated keywords for SEO', max_length=255, verbose_name='Meta Keywords'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='reading_time',
            field=models.PositiveIntegerField(default=0, help_text='Estimated reading time in minutes', verbose_name='Reading Time (minutes)'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly version of the title (auto-generated)', max_length=255, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Add relevant tags for better discoverability', related_name='blogs', to='blog.tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='title',
            field=models.CharField(help_text='Enter a descriptive title (3-255 characters)', max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255)], verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='blog',
            name='views',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this post has been viewed', verbose_name='Views'),
        ),
        migrations.AlterField(
            model_name='bookmark',
            name='blog',
            field=models.ForeignKey(help_text='The blog post that was bookmarked', on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='blog.blog', verbose_name='Blog Post'),
        ),
        migrations.AlterField(
            model_name='bookmark',
            name='user',
            field=models.ForeignKey(help_text='The user who bookmarked this post', on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterField(
            model_name='category',
            name='img',
            field=models.ImageField(blank=True, help_text='Upload a high-quality image for better engagement', null=True, upload_to='uploads/%Y/%m/%d', verbose_name='Featured Image'),
        ),
        migrations.AlterField(
            model_name='category',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this content is visible to users', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='category',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Soft delete flag', verbose_name='Is Deleted'),
        ),
        migrations.AlterField(
            model_name='category',
            name='meta_description',
            field=models.CharField(blank=True, help_text='Brief description for search engines (max 160 characters)', max_length=160, verbose_name='Meta Description'),
        ),
        migrations.AlterField(
            model_name='category',
            name='meta_keywords',
            field=models.CharField(blank=True, help_text='Comma-separated keywords for SEO', max_length=255, verbose_name='Meta Keywords'),
        ),
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly version of the title (auto-generated)', max_length=255, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='category',
            name='title',
            field=models.CharField(help_text='Enter a descriptive title (3-255 characters)', max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255)], verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='blog',
            field=models.ForeignKey(help_text='The blog post this comment belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blog', verbose_name='Blog Post'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='content',
            field=models.TextField(help_text='Your comment (10-1000 characters)', validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(1000)], verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='email',
            field=models.EmailField(blank=True, help_text='Cached email address', max_length=254, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='name',
            field=models.CharField(blank=True, help_text='Cached display name', max_length=255, verbose_name='Display Name'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(help_text='The user who wrote this comment', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterField(
            model_name='like',
            name='blog',
            field=models.ForeignKey(help_text='The blog post that was liked', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='blog.blog', verbose_name='Blog Post'),
        ),
        migrations.AlterField(
            model_name='like',
            name='user',
            field=models.ForeignKey(help_text='The user who liked this post', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(help_text='Tag name (2-50 characters)', max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(50)], verbose_name='Tag Name'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly version of the tag name', unique=True, verbose_name='Slug'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['status', '-created_at'], name='blog_blog_status_ec8f84_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['author', '-created_at'], name='blog_blog_author__f1ab3e_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['published_at'], name='blog_blog_publish_097daa_idx'),
        ),
        migrations.AddIndex(
            model_name='bookmark',
            index=models.Index(fields=['user', '-created_at'], name='blog_bookma_user_id_bd162a_idx'),
        ),
        migrations.AddIndex(
            model_name='bookmark',
            index=models.Index(fields=['blog', '-created_at'], name='blog_bookma_blog_id_852371_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent', 'sort_order'], name='blog_catego_parent__86e40d_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active', 'sort_order'], name='blog_catego_is_acti_1c73b2_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['blog', '-created_at'], name='blog_commen_blog_id_6d5857_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user', '-created_at'], name='blog_commen_user_id_21f92c_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['status', '-created_at'], name='blog_commen_status_3c3297_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent'], name='blog_commen_parent__43ce68_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['blog', '-created_at'], name='blog_like_blog_id_e0ed07_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user', '-created_at'], name='blog_like_user_id_9d7549_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['slug'], name='blog_tag_slug_915fc6_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['-usage_count'], name='blog_tag_usage_c_6f058d_idx'),
        ),
    ]
