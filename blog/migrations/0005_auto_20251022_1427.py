# Generated by Django 4.2.20 on 2025-10-22 10:57

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
from django.utils import timezone


def populate_created_at(apps, schema_editor):
    """Populate created_at field with current time for existing records"""
    Blog = apps.get_model('blog', 'Blog')
    Category = apps.get_model('blog', 'Category')
    
    now = timezone.now()
    
    # Update existing blogs
    Blog.objects.filter(created_at__isnull=True).update(created_at=now)
    
    # Update existing categories
    Category.objects.filter(created_at__isnull=True).update(created_at=now)


def reverse_populate_created_at(apps, schema_editor):
    """Reverse migration - no need to do anything"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0004_comment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Add new fields to Category
        migrations.AddField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='category',
            name='meta_description',
            field=models.CharField(blank=True, max_length=160, verbose_name='Meta Description'),
        ),
        migrations.AddField(
            model_name='category',
            name='meta_keywords',
            field=models.CharField(blank=True, max_length=255, verbose_name='Meta Keywords'),
        ),
        migrations.AddField(
            model_name='category',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, default=timezone.now),
            preserve_default=False,
        ),
        
        # Add new fields to Blog
        migrations.AddField(
            model_name='blog',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='blog',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blog',
            name='excerpt',
            field=models.TextField(blank=True, max_length=500, verbose_name='Excerpt'),
        ),
        migrations.AddField(
            model_name='blog',
            name='featured',
            field=models.BooleanField(default=False, verbose_name='Featured Post'),
        ),
        migrations.AddField(
            model_name='blog',
            name='meta_description',
            field=models.CharField(blank=True, max_length=160, verbose_name='Meta Description'),
        ),
        migrations.AddField(
            model_name='blog',
            name='meta_keywords',
            field=models.CharField(blank=True, max_length=255, verbose_name='Meta Keywords'),
        ),
        migrations.AddField(
            model_name='blog',
            name='reading_time',
            field=models.PositiveIntegerField(default=0, verbose_name='Reading Time (minutes)'),
        ),
        migrations.AddField(
            model_name='blog',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, default=timezone.now),
            preserve_default=False,
        ),
        
        # Update slug field to be unique
        migrations.AlterField(
            model_name='blog',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug'),
        ),
        
        # Update ordering
        migrations.AlterModelOptions(
            name='blog',
            options={'ordering': ('-created_at',), 'verbose_name': 'Blog', 'verbose_name_plural': 'Blogs'},
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ('-created_at',), 'verbose_name': 'Categories', 'verbose_name_plural': 'Categories'},
        ),
        
        # Populate created_at fields
        migrations.RunPython(populate_created_at, reverse_populate_created_at),
    ]
